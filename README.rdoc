== Description
Testing Assignment to write test cases for poker hands. 

Poker Hand handles the logic for getting the rank of a poker hand. It can also be used to compare two or more hands to determine which hand has the highest poker value.

In the card game poker, a hand consists of five cards and are ranked, from lowest to highest, in the following way:

High Card: Highest value card.
One Pair: Two cards of the same value.
Two Pairs: Two different pairs.
Three of a Kind: Three cards of the same value.
Straight: All cards are consecutive values.
Flush: All cards of the same suit.
Full House: Three of a kind and a pair.
Four of a Kind: Four cards of the same value.
Straight Flush: All cards are consecutive values of same suit.
Royal Flush: Ten, Jack, Queen, King, Ace, in same suit.
The cards are valued in the order:
2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King, Ace.

If two players have the same ranked hands then the rank made up of the highest value wins; for example, a pair of eights beats a pair of fives (see example 1 below). But if two ranks tie, for example, both players have a pair of queens, then highest cards in each hand are compared (see example 4 below); if the highest cards tie then the next highest cards are compared, and so on.

Card representations can be passed to the PokerHand constructor as a string or an array. Face cards (cards ten, jack, queen, king, and ace) are created using their letter representation (T, J, Q, K, A).

== Example

    require 'rubygems'
    require 'card'
    require 'poker_hand'

    hand1 = PokerHand.new("8H 9C TC JD QH")
    hand2 = PokerHand.new(["3D", "3C", "3S", "KD", "AH"])
    puts hand1                => 8h 9c Tc Jd Qh (Straight)
    puts hand1.just_cards     => 8h 9c Tc Jd Qh
    puts hand1.rank           => Straight
    puts hand2                => 3d 3c 3s Kd Ah (Three of a kind)
    puts hand2.rank           => Three of a kind
    puts hand1 > hand2        => true

== License

This is free software; you can redistribute it and/or modify it under the terms of the BSD license. See LICENSE for more details.
